?ddply
?mean
data[date=="2012-11-30"]
data[date=='2012-11-30']
data[date'2012-11-30']
data[date==as.date('2012-11-30')]
data[date==as.Date('2012-11-30')]
data[data$date=="2012-11-30"]]
data[data$date=="2012-11-30"]
data[data$date=="2012-11-30",]
ddply(data,.(interval),summarize,mean=mean(steps,na.rm=TRUE))
mean(totalStepsPerDay[,2])
m1 <- mean(totalStepsPerDay[,2])
m1
as.Numeric(m1)
?if
end
?apply
meanStepsByInterval <- ddply(data,.(interval),summarize,mean=mean(steps,na.rm=TRUE))
dataComplete <- data;
dataComplete
View(dataComplete)
for (row in dataComplete) {
if (is.na(row$steps))
row$steps <- meanStepsByInterval[meanStepsByInterval$interval==row$interval],steps]
}
for (row in dataComplete) {
if (is.na(row$steps))
row$steps <- meanStepsByInterval[meanStepsByInterval$interval==row$interval],steps]
for (row in dataComplete) {
if (is.na(row$steps)) {
row$steps <- meanStepsByInterval[meanStepsByInterval$interval==row$interval],steps]
}
}
for (row in dataComplete) {
if (is.na(row$steps))
row$steps <- meanStepsByInterval[meanStepsByInterval$interval==row$interval,steps]
}
for (row in dataComplete) {
if (is.na(row$steps))
print a
for (row in dataComplete) {
if (is.na(row$steps))
print a}
dataComplete <- data;
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"]))
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete$interval,steps]
}
names(dataComplete)
dataComplete[1,"steps"]
dataComplete[2,"steps"]
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"]))
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"steps"]
}
View(dataComplete)
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"]))
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"]],"steps"]
}
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"]))
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"steps"]
}
dataComplete[1,"steps"] <- 5
meanStepsByInterval[meanStepsByInterval$interval==dataComplete[3,"interval"],"steps"]
dataComplete[3,"interval"]
meanStepsByInterval[meanStepsByInterval$interval==10,"steps"]
meanStepsByInterval
meanStepsByInterval$interval=10
meanStepsByInterval <- ddply(data,.(interval),summarize,mean=mean(steps,na.rm=TRUE))
str(meanStepsByInterval)
meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"steps"]
meanStepsByInterval[meanStepsByInterval$interval==10,"steps"]
meanStepsByInterval[meanStepsByInterval$interval==10]
meanStepsByInterval[meanStepsByInterval$interval==10,]
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"]))
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"mean"]
}
totalStepsPerDay <- aggregate(steps~date,data=dataComplete,FUN=sum)
hist(totalStepsPerDay$steps,col=c("blue"),main="total number of steps taken per day",xlab="date")
dev.off()
totalStepsPerDay <- aggregate(steps~date,data=dataComplete,FUN=sum)
hist(totalStepsPerDay$steps,col=c("blue"),main="total number of steps taken per day",xlab="date")
View(dataComplete)
View(totalStepsPerDay)
hist(totalStepsPerDay$date,col=c("red"),main="total number of steps taken per day",xlab="date")
View(dataComplete)
View(dataComplete)
hist(totalStepsPerDay$date,col=c("red"),main="total number of steps taken per day",xlab="date")
dataComplete[1,"steps"]=1
View(dataComplete)
dataComplete <- data;
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"]))
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"mean"]
}
View(dataComplete)
is.na(dataComplete[1,"steps"])
nrow(dataComplete)
dataComplete <- data;
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"])) {
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"mean"]
}
}
dataComplete <- data;
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"])) {
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"mean"]
}
p
}
print 5
print "5"
print(5)
dataComplete <- data;
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"]))
print(i)
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"mean"]
}
dataComplete <- data;
for (i in nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"])) {
print(i)
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"mean"]
}
}
for (i in nrow(dataComplete)) { is.na(dataComplete[i,"steps"])) }
for (i in nrow(dataComplete)) { is.na(dataComplete[i,"steps"]) }
for (i in nrow(dataComplete)) { print(is.na(dataComplete[i,"steps"])) }
for (i in nrow(dataComplete)) { print(i) }
for (i in 1:nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"])) {
print(i)
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"mean"]
}
}
dataComplete <- data;
for (i in 1:nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"])) {
print(dataComplete[i,"steps"])
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"mean"]
}
}
nrow(data[is.na(data$steps),])
dataComplete <- data
j=0
for (i in 1:nrow(dataComplete)) {
if (is.na(dataComplete[i,"steps"])) {
j=j+1
print(dataComplete[i,"steps"])
dataComplete[i,"steps"] <- meanStepsByInterval[meanStepsByInterval$interval==dataComplete[i,"interval"],"mean"]
}
}
print(j)
?WEEKDAY
?weekday
?weekdays()
weekdays(unique(dataComplete.date))
weekdays(unique(dataComplete$date))
weekdays(dataComplete$date[1])
weekdays(dataComplete$date[2])
str(dataComplete)
str(dataComplete)
str(data)
dataComplete$date[2]
class9dataComplete$date[2])
class(dataComplete$date[2])
data <- read.csv(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",",colClasses=c("numeric","date","numeric"),na.strings = "NA")
data <- read.csv(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",",colClasses=c("numeric","char","numeric"),na.strings = "NA")
data <- read.csv(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",",colClasses=c("numeric","character","numeric"),na.strings = "NA")
data <- read.csv(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",")
str(data)
?as.Date
data <- read.csv(unz("activity.zip", "activity.csv"), header=T, quote="\"", sep=",",colClasses=c("numeric","Date","numeric"),na.strings = "NA")
str(data)
View(dataComplete)
?read.csv
str(data)
str(dataComplete)
knit2html(“PA1_tempate.Rmd”)"
knit2html(“PA1_tempate.Rmd”)
knit2html(“PA1_tempate.Rmd”)
knit2html("PA1_tempate.Rmd")
setwd("E:/mydata/Personal/Learning/JohnHopkinsDataScience/05_assignment1/RepData_PeerAssessment1")
knit2html("PA1_tempate.Rmd")
knit2html("PA1_template.Rmd")
View(m)
View(data)
View(dataComplete)
knit2html("PA1_template.Rmd")
str(dataComplete)
weekdays(dataComplete[,"date"])
?mutate
?apply
?transform
?mutate
?ifthen
?ifelse
weekday(dataComplete[1])
weekday(dataComplete[1,date])
weekdays(dataComplete[1,"date])
""
"
weekdays(dataComplete[1,"date"])
?mapvalue
?map
?mapping
?napLevel
?mapLevels
?mapLevel
?as.factor
?factor
factor(data$date)
str(data)
data$dateFac <- factor(date)
data$dateFac <- factor(data$date)
str(data)
levels(dateFac)
levels(data.dateFac)
levels(data$dateFac)
l <- levels(data$dateFac)
l <- levels(data$date)
l
l <- levels(as.factor(data$date))
l
l[1]
?apply
?sapply
str(l)
class(l)
vapply(l,function(x) print(x))
sapply(l,function(x))
sapply(l,function(x) {print(x)})
sapply(l,function(x) print(x))
weekdays("2012-11-30")
weekdays(as.Date("2012-11-30"))
sapply(l,function(x) ifthen(weekdays(x) %in ("Saturday","Sunday"),"weekend","weekday")
sapply(l,function(x) ifthen(weekdays(x) %in% ("Saturday","Sunday"),"weekend","weekday")
"a" %in% c("a")
sapply(l,function(x) ifthen(weekdays(x) %in% c("Saturday","Sunday"),"weekend","weekday")
)
sapply(l,function(x) ifelse(weekdays(x) %in% c("Saturday","Sunday"),"weekend","weekday")
)
sapply(l,function(x) ifelse(weekdays(as.Date(x) %in% c("Saturday","Sunday"),"weekend","weekday"))
)
sapply(l,function(x) ifelse(weekdays(as.Date(x)) %in% c("Saturday","Sunday"),"weekend","weekday")))
sapply(l,function(x) ifelse(weekdays(as.Date(x)) %in% c("Saturday","Sunday"),"weekend","weekday"))
mapvalues(l,w)
w <- sapply(l,function(x) ifelse(weekdays(as.Date(x)) %in% c("Saturday","Sunday"),"weekend","weekday"))
mapvalues(l,w)
mapvalues(from=l,to=w)
?mapvalues
mapvalues(levels(as.factor),from=l,to=w)
mapvalues(levels(as.factor(data$date)),from=l,to=w)
levels(as.factor(data$date)<- mapvalues(levels(as.factor(data$date)),from=l,to=w)
)
levels(as.factor(data$date))<- mapvalues(levels(as.factor(data$date)),from=l,to=w)
levels(as.factor(data$dateFac))<- mapvalues(levels(as.factor(data$date)),from=l,to=w)
levels(data$dateFac)<- mapvalues(levels(as.factor(data$date)),from=l,to=w)
rbind
?cbin
?cbind
data.frame(l,w)
?map
w
?mutate
str(dataComplete)
str(w)
mutate(dataComplete, new=w[date]))
mutate(dataComplete, new=w[date])
w["2012-10-09"]
mutate(dataComplete, new=w[dataComplete$date])
mutate(dataComplete, new=w[as.Character(date)])
?as.char
?as.Char
?as.Character
?string
?char
mutate(dataComplete, new=w[as.character(date)])
a <- levels(data$date)
a
a <- levels(as.factor(data$date))
a
str(a)
?split
weekdayData <- dataComplete[$typeOfDay="weekday",]
weekdayData <- dataComplete[dataComplete$typeOfDay="weekday",]
weekdayData <- dataComplete[dataComplete$typeOfDay=="weekday",]
weekendData <- dataComplete[dataComplete$typeOfDay=="weekend",]
nrow(dataComplete)
nrow(weekdayData)+nrow(weekendData)
str(dataComplete)
l <- levels(as.factor(data$date))
w <- sapply(l,function(x) ifelse(weekdays(as.Date(x)) %in% c("Saturday","Sunday"),"weekend","weekday"))
mutate(dataComplete, typeOfDay=w[as.character(date)]))
l <- levels(as.factor(data$date))
w <- sapply(l,function(x) ifelse(weekdays(as.Date(x)) %in% c("Saturday","Sunday"),"weekend","weekday"))
mutate(dataComplete, typeOfDay=w[as.character(date)])
weekdayData <- dataComplete[dataComplete$typeOfDay=="weekday",]
weekendData <- dataComplete[dataComplete$typeOfDay=="weekend",]
nrow(weekdayData)+nrow(weekendData)
str(dataComplete)
dataComplete <- mutate(dataComplete, typeOfDay=w[as.character(date)])
weekdayData <- dataComplete[dataComplete$typeOfDay=="weekday",]
weekendData <- dataComplete[dataComplete$typeOfDay=="weekend",]
nrow(weekdayData)+nrow(weekendData)
nrow(dataComplete)
?plot
?xyplot
install.packages("lattice")
library(lattice)
xyplot(interval ~ steps | typeOfDay, data = dataComplete, layout = c(5, 1))
xyplot(interval ~ steps | typeOfDay, data = dataComplete, layout = c(1, 2))
?xyplot
xyplot(interval ~ steps | typeOfDay, data = dataComplete, lty=1, layout = c(1, 2))
xyplot(interval ~ steps | typeOfDay, data = dataComplete, type="l", layout = c(1, 2))
unique(dataComplete$interval)
?aggregate
?summarize
?aggregate
totalStepsPerDay <- aggregate(x=data,by=list(date),data=data,FUN=sum)
totalStepsPerDay <- aggregate(x=data,by=list("date"),data=data,FUN=sum)
totalStepsPerDay <- aggregate(x=data,by=list(data$date),data=data,FUN=sum)
totalStepsPerDay <- aggregate(data,by=list(date),FUN=sum)
totalStepsPerDay <- aggregate(data,by=list(date,interval),FUN=sum)
totalStepsPerDay <- aggregate(data,steps~date,FUN=sum)
totalStepsPerDay <- aggregate(steps~date,data=data,FUN=sum)
hist(totalStepsPerDay$steps,col=c("red"),xlab="Total number of Steps per Day")
totalStepsPerDay
totalStepsPerDay[steps<5000]
totalStepsPerDay[steps<5000,]
totalStepsPerDay[totalStepsPerDay$steps<5000,]
totalStepsPerDay[10000>totalStepsPerDay$steps>15000,]
totalStepsPerDay[totalStepsPerDay$steps>15000,]
totalStepsPerDay[totalStepsPerDay$steps>10000,]
count(totalStepsPerDay[totalStepsPerDay$steps>10000,])
nrow(totalStepsPerDay[totalStepsPerDay$steps>10000,])
avgDailyData <- aggregate(steps~interval,data=data,FUN=mean)
plot(avgDailyData$interval,avgDailyData$steps,xlab="interval",ylab="average steps across all days",type="l")
avgDailyData <- aggregate(steps~interval+typeOfDay,data=dataComplete,FUN=mean)
avgDailyData
library(lattice)
xyplot(interval ~ steps | typeOfDay, data = avgDailyData, type="l", layout = c(1, 2))
xyplot(steps ~ intervals | typeOfDay, data = avgDailyData, type="l", layout = c(1, 2))
xyplot(steps ~ interval | typeOfDay, data = avgDailyData, type="l", layout = c(1, 2))
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
?apply
dataComplete <- data
View(dataComplete)
View(meanStepsByInterval)
?sapply
?tapply
tapply(data,as.factor(interval),FUN="mean")
tapply(data,as.factor("interval"),FUN="mean")
tapply(data,as.factor("interval"),FUN=mean)
tapply(data,as.factor(data$interval),FUN=mean)
as.factor(data$interval)
nrow(as.factor(data$interval))
count(as.factor(data$interval))
num(as.factor(data$interval))
as.factor(data$interval)
as.factor(data$interval)
?apply
?summarise
?apply
apply(dataComplete,is.na(data$steps),function(x) print("a"))
apply(dataComplete,data[is.na(data$steps)],function(x) print("a"))
data[is.na(data$steps)]
data$steps[is.na(data$steps)]
index(data[is.na(data$steps),])
?index
?rownum
?rownumber
row(data[is.na(data$steps),])
numrows(row(data[is.na(data$steps),]))
numrow(row(data[is.na(data$steps),]))
count(row(data[is.na(data$steps),]))
nrow(row(data[is.na(data$steps),]))
apply(dataComplete,row(data[is.na(data$steps)],function(x) print("a"))
)
apply(dataComplete,row(data[is.na(data$steps)],FUN=function(x) print("a"))
)
apply(dataComplete,row(data[is.na(data$steps)],FUN=function(x) print("a"))
)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
apply(x,2,is.vector)
?sapply
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval(x$interval))
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[meanStepsByInterval#interval==$x$interval])
)
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[meanStepsByInterval$interval==x$interval])
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[meanStepsByInterval$interval=="interval"])
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[meanStepsByInterval$interval=="
interval"])
?ddployr
?ddplyr
?ddply
?tapply
?ddply
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[meanStepsByInterval$interval==                                                                   interval])
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[meanStepsByInterval$interval==                                                                   interval])
meanStepsByInterval
rows(meanStepsByInterval)
row(meanStepsByInterval)
row(meanStepsByInterval) <- meanStepsByInterval[,"interval"]
rownames(meanStepsByInterval) <- meanStepsByInterval[,"interval"]
row(meanStepsByInterval)
meanStepsByInterval
meanStepsByInterval[2355,"mean"]
meanStepsByInterval[2355,"steps"]
meanStepsByInterval[2355]
meanStepsByInterval[2355,]
meanStepsByInterval["2355",]
w
class(str)
class(w)
l
?sapply
class(l)
?ddploy
?mutate
mean(dataCompleted.interval)
mean(dataCompleted$interval)
mean(data$interval)
?ddploy
?ddply
meanStepsByInterval
dataComplete <- ddply(data,.(interval),function(x) steps=ifelse(is.na(steps),mean(steps,na.rm=TRUE),steps),.drop=FALSE)
dataComplete <- ddply(data,.(interval),function(x) steps=ifelse(is.na(steps),mean(steps,na.rm=TRUE),"steps"),.drop=FALSE)
dataComplete <- ddply(data,.(interval),function(x) "steps"=ifelse(is.na(steps),mean(steps,na.rm=TRUE),"steps"),.drop=FALSE)
dataComplete <- ddply(data,.(interval),function(x) x$steps=ifelse(is.na(steps),mean(steps,na.rm=TRUE),x$steps),.drop=FALSE)
dataComplete <- ddply(data,.(interval),function(x) x$steps=ifelse(is.na(steps),mean(x$steps,na.rm=TRUE),x$steps),.drop=FALSE)
dataComplete <- ddply(data,.(interval),function(x) x$steps=ifelse(is.na(x$steps),mean(x$steps,na.rm=TRUE),x$steps),.drop=FALSE)
View(dataComplete)
dataComplete <- ddply(data,.(interval),function(x) x$steps=ifelse(is.na(x$steps),mean(x$steps,na.rm=TRUE),x$steps))
View(dataComplete)
dataComplete <- ddply(data,.(interval),function(x) x$steps=ifelse(is.na(x$steps),1,2))
View(dataComplete)
dataComplete <- ddply(data,.(interval,date),function(x) x$steps=ifelse(is.na(x$steps),1,2))
View(dataComplete)
dataComplete <- ddply(data,.(interval,date),function(x) x$interval)
View(dataComplete)
dataComplete <- ddply(data,.(interval),function(x) x$date)
View(dataComplete)
dataComplete <- ddply(data,.(interval),function(x) mean(x$steps),.drop=TRUE)
View(dataComplete)
sapply(data[is.na(data$steps),],1)
?sapply
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval(as.character(x$interval))
)
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[as.character(x$interval)])
dpply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[as.character(x$interval)])
ddply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[as.character(x$interval)])
ddply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[as.character(x$interval)])
?ddply
apply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[as.character(x$interval)])
?apply
sapply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[as.character(x['interval'])])
apply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[as.character(x$interval)])
apply(data[is.na(data$steps),],MARGIN=1,FUN=function(x) meanStepsByInterval[as.character(x$interval)])
apply(data[is.na(data$steps),],MARGIN=1,FUN=function(x) meanStepsByInterval[as.character(x['interval'])
)
apply(data[is.na(data$steps),],MARGIN=1,FUN=function(x) meanStepsByInterval[as.character(x['interval'])])
apply(data[is.na(data$steps),],MARGIN=1,FUN=function(x) x['interval'])
ddply(data[is.na(data$steps),],FUN=function(x) meanStepsByInterval[as.character(x$interval)])
ddply(data[is.na(data$steps),],.variables="",FUN=function(x) meanStepsByInterval[as.character(x$interval)])
ddply(data[is.na(data$steps),],.variables=.(date,interval,steps),FUN=function(x) meanStepsByInterval[as.character(x$interval)])
ddply(data[is.na(data$steps),],.variables=.(date,interval,steps),FUN=function(x) steps=meanStepsByInterval[as.character(x$interval)])
ddply(data[is.na(data$steps),],.variables=.(date,interval,steps),FUN=function(x) x$steps=meanStepsByInterval[as.character(x$interval)])
names(ddply(data[is.na(data$steps),],.variables=.(date,interval,steps),FUN=function(x) meanStepsByInterval[as.character(x$interval)]))
ddply(data[is.na(data$steps),],.variables=.(date,interval,steps),FUN=mutate(x),newCol=meanStepsByInterval[as.character(x$interval)])
ddply(data[is.na(data$steps),],.variables=.(date,steps),FUN=mutate(x),newCol=meanStepsByInterval[as.character(x$interval)])
names(ddply(data[is.na(data$steps),],.variables=.(date,steps),FUN=mutate(x),newCol=meanStepsByInterval[as.character(x$interval)]))
names(ddply(data[is.na(data$steps),],.variables=.(interval),FUN=mutate(x),newCol=meanStepsByInterval[as.character(x$interval)]))
ddply(data[is.na(data$steps),],.variables=.(interval),FUN=mutate(x),newCol=meanStepsByInterval[as.character(x$interval)])
ddply(data[is.na(data$steps),],.variables=.(interval),FUN=mutate(x),newCol=meanStepsByInterval[as.character(x$interval)])
meanStepsByInterval[as.character("2355")]
meanStepsByInterval[as.character[2355)]
meanStepsByInterval[as.character(2355)]
meanStepsByInterval[as.character(2355),1]
meanStepsByInterval[as.character(2355),2]
meanStepsByInterval[as.character(2355),3]
meanStepsByInterval[as.character(2355),2]
ddply(data[is.na(data$steps),],.variables=.(interval),FUN=mutate(x),newCol=meanStepsByInterval[as.character(x$interval),2])
ddply(data[is.na(data$steps),],.variables=.(interval))
?ddply
ddply(data[is.na(data$steps),],.variables=.(interval),.fun=mutate(x),newCol=meanStepsByInterval[as.character(x$interval),2])
ddply(
,.variables=.(interval),.fun=mutate(x),newCol=meanStepsByInterval[as.character(x$interval),2])
data[is.na(data$steps),
]
class(data[is.na(data$steps),])
ddply(.data=data[is.na(data$steps),],.variables=.(interval),.fun=mutate(x),newCol=meanStepsByInterval[as.character(x$interval),2])
is.data.frame(data[is.na(data$steps),])
ddply(data[is.na(data$steps),],.variables=.(interval),.fun=mutate,newCol=meanStepsByInterval[as.character(x$interval),2])
ddply(data[is.na(data$steps),],.variables=.(interval),.fun=mutate(x),newCol=meanStepsByInterval[as.character(x$interval),2])
ddply(data[is.na(data$steps),],.variables=.(interval),.fun=mutate(x),newCol=meanStepsByInterval[as.character(x['interval']),2])
ddply(data[is.na(data$steps),],.variables=.(interval),.fun=mutate(x))
ddply(data[is.na(data$steps),],.variables=.(interval),.fun=mutate,newCol=meanStepsByInterval[as.character(interval),2])
ddply(data[is.na(data$steps),],.variables=.(interval),.fun=mutate,interval=meanStepsByInterval[as.character(interval),2])
ddply(data[is.na(data$steps),],.variables=.(interval),.fun=mutate,steps=meanStepsByInterval[as.character(interval),2])
data[is.na(data$steps),] <- ddply(data[is.na(data$steps),],.variables=.(interval),.fun=mutate,steps=meanStepsByInterval[as.character(interval),2])
data[is.na(data$steps),]
apply(data[is.na(data$steps),],MARGIN=1,FUN=function(x) x['interval'])
